
jsp - servlet --> technology  
framework :
	java web / java database 
	
	design pattern 

	frontend 
	backend 
	mono
	micro 
		
	spring 
	hibernate 
	
	maven 
	
	download STS 
	
	spring -> starter project -> 
	
	com 
	webapp -> WEB-INF/views 
	
	jsp plugin sts install -
	
	application.properties -> server.port=9999
--------------------------------------------------------------------------------------	
LOMBOK:-
	we don't want to generate  , getters and setters manually 
	We will use lombok for that 
    we need to add lombok lib in pom.xml

HOW TO ADD LOMBOK JAR IN PROJECT:- 
	to add lombok we need to do right click on project
	spring -> add starter and type lombok->click next -> tick pom.xml and finish 
	now just write @Getter and @Setter on class 
	it will generate getters and setters . you can check using outline view 


----------------------------------------------------------------------------------
How to add lomobok in STS :-
	google -> download lombok -> you got jar in download -> jar -> click -> chilly icon -> installer-> 
	browse -> sts path -> green icon sts -> select -> install -> quit installer
	
	now sts must be re-open [ close and open again ]   
----------------------------------------------------------------------------------
validation

crud 





-----------------------------------------------------------------------------------
git 
cloud db
deployment 
send mail 
fileupload



encrypt password / decrypt password 
-----------------------------------------------------------------------------------
password encryption 

step1 : pom.xml 
				spring security crypto 
				
step2: 

		BcryptPasswordEncoder
			encode()  
		royal ->smdjuy78u4hj4i5t8t7r4yhrfuifuydgv
		create spring bean in main application file-> 
		@Bean
		PasswordEncoder getEncoder() {
			return new BCryptPasswordEncoder();
		}

step3: 
		@Autowired 
		PasswordEncoder passwordEncoder; 
		
		passwordEncoder.encode(userBean.getPassword());
		
--------------------------------------------------------------------------------
Login -> authenticate 


		Login.jsp >	email , password 
		
		controller -> read email password {raw password} 
		
		
		select * from user where email = ? 
		
		dbUser -> 
		rawPassword 
		bcrypt -> matches(e,r)->true | false


--------------------------------------------------------------------------
Signup -> Welcome mail 
3 times invalid credentials -> send mail 
forgetPassword -> otp -> link -> 

http server -> 
smtp server -> 


1)you have to integrate smtp server in your system 
2)you can use any third party api / server 
	gmail 
	

email
password:

mail -> app password 
 
step 1: mail jar 

step 2: SMTP configuration  / third party api configuration 
 
step 3: send the mail 




































